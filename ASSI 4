#include <iostream>
using namespace std;

class complex{
    public:
    int real;
    int img;
    public:
    complex(int r=0, int i=0){
        real =r;
        img =i;
    }
    
    complex operator+(complex r2){
        complex r;
        r.real= this->real + r2.real;
        r.img= this->img + r2.img;
        return r;
    }
    complex operator*(complex r2){
        complex r;
        r.real= (this->real*r2.real)-(this->img*r2.img);
        r.img=  (this->real*r2.img)+(r2.real*this->img);
        return r;
    }
    
    friend ostream& operator<<(ostream&out , const complex&comp);
    friend istream& operator>>(istream&in , complex &comp);
}; 

istream& operator>>(istream&in , complex &comp){
    cout<<"Enter Real"<<endl;
    in>>comp.real;
    cout<<"Enter Img"<<endl;
    in>>comp.img;
    return in;
}
ostream& operator<<(ostream&out , const complex&comp){
  
  cout<<comp.real<<comp.img<<endl;
 return out   ;
}


int main() {
    
    complex c1(20,30),c2(10,20);
    complex c3;
    cin >>c3;
    cout <<c3;

    return 0;
}
